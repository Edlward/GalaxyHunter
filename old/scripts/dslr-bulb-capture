#!/bin/bash

gphoto_cmd() {
  gphoto2 --quiet --auto-detect $@
}

gphoto_grab_image() {
  gphoto_cmd --capture-tethered
}

shoot_ctl() {
  # Usage: ./dslr-shoot [device] <opening-delay> <exposure_time> <shots> <delay_between_shots>
  device="$1"
  exposure_time="$2"
  dslr-shoot $device 0 $exposure_time 1 0
}

shutter_device="/dev/ttyUSB0"
initial_delay="2"
delay_between_shots="5"
exposure_time="30"
shots="1"
hook_script="true"
wait_after="30"
set -o monitor

show_help() {
  cat <<EOF
Usage: $0 options
Options:
  -d|--device device                   - shutter control serial device (default: /dev/ttyUSB0)
  -e|--exposure seconds                - exposure time in seconds (default: 30)
  -s|--shots number                    - shots number (default: 1)
  -b|--between-shots-delay seconds     - delay between shots (default: 5 seconds)
  -i|--initial-delay seconds           - initial delay (default: 2 seconds)
  -h|--hook script                     - execute this script between images (default: none)
  -a|--wait-after seconds              - wait after the shooting has finished (default: 30 seconds)
  
Hook script will receive the following parameters: 
  1. current run number (0: before first run, 1...shots_number-1: between shots, shots_number: after last run)
  2. total shots number
EOF
}

error_message() {
  [ "$@" != "" ] && echo "$@"
  show_help
  exit 1
}

while [ "$1" != "" ]; do
  case "$1" in
    -e|--exposure)
    exposure_time="$2"; shift
    ;;
    -d|--device)
    shutter_device="$2"; shift
    ;;
    -s|--shots)
    shots="$2"; shift
    ;;
    -b|--between-shots-delay)
    delay_between_shots="$2"; shift
    ;;
    -i|--initial-delay)
    initial_delay="$2"; shift
    ;;
    -h|--hook)
    hook_script="$2"; shift
    ;;
    -a|--wait-after)
    wait_after="$2"; shift
    ;;
    *)
    error_message "Unrecognized command."
    ;;
  esac
  shift
done

[ -c "$shutter_device" ] || error_message "Wrong shutter device."

echo "Initial delay of $initial_delay seconds..." >&2
gphoto_grab_image &
sleep "$initial_delay"
for run in $( seq "$shots"); do
  "$hook_script" "$(( $run - 1))" "$shots"
  echo "running shoot $run of $shots" >&2
    shoot_ctl "$shutter_device" "$exposure_time"
  echo "Delay between shots of $delay_between_shots seconds..." >&2
  sleep "$delay_between_shots"
done
sleep "$wait_after"
"$hook_script" "$shots" "$shots"
cat <<EOF
******************************* Shooting sequence terminated **********************************************
* Any output below this line is the image downloading process. After it's finished, press enter to quit.  *
***********************************************************************************************************
EOF
read 
kill %1


